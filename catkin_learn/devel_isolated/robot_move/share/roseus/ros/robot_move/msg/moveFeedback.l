;; Auto-generated. Do not edit!


(when (boundp 'robot_move::moveFeedback)
  (if (not (find-package "ROBOT_MOVE"))
    (make-package "ROBOT_MOVE"))
  (shadow 'moveFeedback (find-package "ROBOT_MOVE")))
(unless (find-package "ROBOT_MOVE::MOVEFEEDBACK")
  (make-package "ROBOT_MOVE::MOVEFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude moveFeedback.msg.html


(defclass robot_move::moveFeedback
  :super ros::object
  :slots (_n_x _n_y _n_z ))

(defmethod robot_move::moveFeedback
  (:init
   (&key
    ((:n_x __n_x) 0.0)
    ((:n_y __n_y) 0.0)
    ((:n_z __n_z) 0.0)
    )
   (send-super :init)
   (setq _n_x (float __n_x))
   (setq _n_y (float __n_y))
   (setq _n_z (float __n_z))
   self)
  (:n_x
   (&optional __n_x)
   (if __n_x (setq _n_x __n_x)) _n_x)
  (:n_y
   (&optional __n_y)
   (if __n_y (setq _n_y __n_y)) _n_y)
  (:n_z
   (&optional __n_z)
   (if __n_z (setq _n_z __n_z)) _n_z)
  (:serialization-length
   ()
   (+
    ;; float32 _n_x
    4
    ;; float32 _n_y
    4
    ;; float32 _n_z
    4
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; float32 _n_x
       (sys::poke _n_x (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _n_y
       (sys::poke _n_y (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;; float32 _n_z
       (sys::poke _n_z (send s :buffer) (send s :count) :float) (incf (stream-count s) 4)
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; float32 _n_x
     (setq _n_x (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _n_y
     (setq _n_y (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;; float32 _n_z
     (setq _n_z (sys::peek buf ptr- :float)) (incf ptr- 4)
   ;;
   self)
  )

(setf (get robot_move::moveFeedback :md5sum-) "d56e8bdd8926891cb4120395ff64a44b")
(setf (get robot_move::moveFeedback :datatype-) "robot_move/moveFeedback")
(setf (get robot_move::moveFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
float32 n_x
float32 n_y
float32 n_z


")



(provide :robot_move/moveFeedback "d56e8bdd8926891cb4120395ff64a44b")


